function Screen.init 0
push constant 16384
pop static 0
push constant 24576
pop static 1
push constant 0
not
pop static 2
push constant 0
return
function Screen.clearScreen 1
push constant 0
call Screen.setColor 1
pop temp 0
push constant 0
pop local 0
label WHILE_EXP0
push static 0
push local 0
add
push static 1
gt
not
not
if-goto WHILE_END0
push local 0
push static 0
add
push static 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 2
push constant 0
return
function Screen.drawPixel 3
push argument 1
push constant 32
call Math.multiply 2
push argument 0
push constant 16
call Math.divide 2
add
pop local 0
push argument 0
push constant 16
call Math.mod 2
pop local 1
push local 1
call Math.twoToThe 1
pop local 2
push static 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push static 0
add
push local 0
push static 0
add
pop pointer 1
push that 0
push local 2
or
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END0
label IF_FALSE0
push local 0
push static 0
add
push local 0
push static 0
add
pop pointer 1
push that 0
push local 2
not
and
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END0
push constant 0
return
function Screen.drawLine 7
push constant 0
pop local 0
push constant 0
pop local 1
push argument 2
push argument 0
sub
pop local 2
push argument 3
push argument 1
sub
pop local 3
push constant 0
pop local 6
push local 2
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 3
push constant 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push argument 3
push argument 0
call Screen.drawVerticalLine 3
pop temp 0
goto IF_END1
label IF_FALSE1
push argument 3
push argument 1
push argument 0
call Screen.drawVerticalLine 3
pop temp 0
label IF_END1
push constant 0
return
label IF_FALSE0
push local 3
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 2
push constant 0
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 0
push argument 2
push argument 1
call Screen.drawHorizontalLine 3
pop temp 0
goto IF_END3
label IF_FALSE3
push argument 2
push argument 0
push argument 1
call Screen.drawHorizontalLine 3
pop temp 0
label IF_END3
push constant 0
return
label IF_FALSE2
push local 2
push constant 0
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 3
call Math.abs 1
pop local 5
label WHILE_EXP0
push local 0
push local 2
gt
not
push local 1
push local 5
gt
not
and
not
if-goto WHILE_END0
push local 3
push constant 0
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push argument 0
push local 0
add
push argument 1
push local 1
add
call Screen.drawPixel 2
pop temp 0
goto IF_END5
label IF_FALSE5
push argument 0
push local 0
add
push argument 1
push local 1
sub
call Screen.drawPixel 2
pop temp 0
label IF_END5
push local 6
push constant 0
lt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 0
push constant 1
add
pop local 0
push local 6
push local 5
add
pop local 6
goto IF_END6
label IF_FALSE6
push local 1
push constant 1
add
pop local 1
push local 6
push local 2
sub
pop local 6
label IF_END6
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
goto IF_END4
label IF_FALSE4
push local 2
call Math.abs 1
pop local 4
push local 3
call Math.abs 1
pop local 5
label WHILE_EXP1
push local 0
push local 4
gt
not
push local 1
push local 5
gt
not
and
not
if-goto WHILE_END1
push local 3
push constant 0
gt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push argument 0
push local 0
sub
push argument 1
push local 1
add
call Screen.drawPixel 2
pop temp 0
goto IF_END7
label IF_FALSE7
push argument 0
push local 0
sub
push argument 1
push local 1
sub
call Screen.drawPixel 2
pop temp 0
label IF_END7
push local 6
push constant 0
lt
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 0
push constant 1
add
pop local 0
push local 6
push local 5
add
pop local 6
goto IF_END8
label IF_FALSE8
push local 1
push constant 1
add
pop local 1
push local 6
push local 4
sub
pop local 6
label IF_END8
goto WHILE_EXP1
label WHILE_END1
push constant 0
return
label IF_END4
function Screen.drawVerticalLine 6
push argument 0
push constant 32
call Math.multiply 2
push argument 2
push constant 16
call Math.divide 2
add
pop local 0
push argument 1
push constant 32
call Math.multiply 2
push argument 2
push constant 16
call Math.divide 2
add
pop local 1
push local 1
push local 0
sub
pop local 2
push argument 2
push constant 16
call Math.mod 2
pop local 3
push local 3
call Math.twoToThe 1
pop local 4
push constant 0
pop local 5
label WHILE_EXP0
push local 5
push local 2
lt
not
if-goto WHILE_END0
push static 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push local 5
add
push static 0
add
push local 0
push local 5
add
push static 0
add
pop pointer 1
push that 0
push local 4
or
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END0
label IF_FALSE0
push local 0
push local 5
add
push static 0
add
push local 0
push local 5
add
push static 0
add
pop pointer 1
push that 0
push local 4
not
and
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END0
push local 5
push constant 32
add
pop local 5
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawHorizontalLine 8
push constant 16
call Array.new 1
pop local 6
push constant 0
push local 6
add
push constant 32767
push constant 1
add
push constant 16384
add
push constant 8192
add
push constant 4096
add
push constant 2048
add
push constant 1024
add
push constant 512
add
push constant 256
add
push constant 128
add
push constant 64
add
push constant 32
add
push constant 16
add
push constant 8
add
push constant 4
add
push constant 2
add
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 6
add
push constant 32767
push constant 1
add
push constant 16384
add
push constant 8192
add
push constant 4096
add
push constant 2048
add
push constant 1024
add
push constant 512
add
push constant 256
add
push constant 128
add
push constant 64
add
push constant 32
add
push constant 16
add
push constant 8
add
push constant 4
add
push constant 2
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 6
add
push constant 32767
push constant 1
add
push constant 16384
add
push constant 8192
add
push constant 4096
add
push constant 2048
add
push constant 1024
add
push constant 512
add
push constant 256
add
push constant 128
add
push constant 64
add
push constant 32
add
push constant 16
add
push constant 8
add
push constant 4
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push local 6
add
push constant 32767
push constant 1
add
push constant 16384
add
push constant 8192
add
push constant 4096
add
push constant 2048
add
push constant 1024
add
push constant 512
add
push constant 256
add
push constant 128
add
push constant 64
add
push constant 32
add
push constant 16
add
push constant 8
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push local 6
add
push constant 32767
push constant 1
add
push constant 16384
add
push constant 8192
add
push constant 4096
add
push constant 2048
add
push constant 1024
add
push constant 512
add
push constant 256
add
push constant 128
add
push constant 64
add
push constant 32
add
push constant 16
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push local 6
add
push constant 32767
push constant 1
add
push constant 16384
add
push constant 8192
add
push constant 4096
add
push constant 2048
add
push constant 1024
add
push constant 512
add
push constant 256
add
push constant 128
add
push constant 64
add
push constant 32
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push local 6
add
push constant 32767
push constant 1
add
push constant 16384
add
push constant 8192
add
push constant 4096
add
push constant 2048
add
push constant 1024
add
push constant 512
add
push constant 256
add
push constant 128
add
push constant 64
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push local 6
add
push constant 32767
push constant 1
add
push constant 16384
add
push constant 8192
add
push constant 4096
add
push constant 2048
add
push constant 1024
add
push constant 512
add
push constant 256
add
push constant 128
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push local 6
add
push constant 32767
push constant 1
add
push constant 16384
add
push constant 8192
add
push constant 4096
add
push constant 2048
add
push constant 1024
add
push constant 512
add
push constant 256
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 9
push local 6
add
push constant 32767
push constant 1
add
push constant 16384
add
push constant 8192
add
push constant 4096
add
push constant 2048
add
push constant 1024
add
push constant 512
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 10
push local 6
add
push constant 32767
push constant 1
add
push constant 16384
add
push constant 8192
add
push constant 4096
add
push constant 2048
add
push constant 1024
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 11
push local 6
add
push constant 32767
push constant 1
add
push constant 16384
add
push constant 8192
add
push constant 4096
add
push constant 2048
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
push local 6
add
push constant 32767
push constant 1
add
push constant 16384
add
push constant 8192
add
push constant 4096
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 13
push local 6
add
push constant 32767
push constant 1
add
push constant 16384
add
push constant 8192
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 14
push local 6
add
push constant 32767
push constant 1
add
push constant 16384
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 15
push local 6
add
push constant 32767
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 16
call Array.new 1
pop local 7
push constant 0
push local 7
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 7
add
push constant 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 7
add
push constant 7
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push local 7
add
push constant 15
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push local 7
add
push constant 31
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push local 7
add
push constant 63
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push local 7
add
push constant 127
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push local 7
add
push constant 255
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push local 7
add
push constant 511
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 9
push local 7
add
push constant 1023
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 10
push local 7
add
push constant 2047
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 11
push local 7
add
push constant 4095
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
push local 7
add
push constant 8191
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 13
push local 7
add
push constant 16383
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 14
push local 7
add
push constant 32767
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 15
push local 7
add
push constant 32767
push constant 32767
add
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 2
push constant 32
call Math.multiply 2
push argument 0
push constant 16
call Math.divide 2
add
pop local 0
push argument 0
push constant 16
call Math.mod 2
pop local 1
push argument 2
push constant 32
call Math.multiply 2
push argument 1
push constant 16
call Math.divide 2
add
pop local 2
push argument 1
push constant 16
call Math.mod 2
pop local 3
push local 2
push local 0
sub
pop local 4
push local 4
push constant 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push static 2
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push static 0
add
push local 0
push static 0
add
pop pointer 1
push that 0
push local 1
push local 6
add
pop pointer 1
push that 0
or
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
pop local 5
label WHILE_EXP0
push local 5
push local 4
lt
not
if-goto WHILE_END0
push local 0
push local 5
add
push static 0
add
push local 0
push local 5
add
push static 0
add
pop pointer 1
push that 0
push constant 0
not
or
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 5
push constant 1
add
pop local 5
goto WHILE_EXP0
label WHILE_END0
push local 2
push static 0
add
push local 2
push static 0
add
pop pointer 1
push that 0
push local 3
push local 7
add
pop pointer 1
push that 0
or
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END1
label IF_FALSE1
push local 0
push static 0
add
push local 0
push static 0
add
pop pointer 1
push that 0
push local 1
push local 6
add
pop pointer 1
push that 0
not
and
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
pop local 5
label WHILE_EXP1
push local 5
push local 4
lt
not
if-goto WHILE_END1
push local 0
push local 5
add
push static 0
add
push local 0
push local 5
add
push static 0
add
pop pointer 1
push that 0
push constant 0
and
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 5
push constant 1
add
pop local 5
goto WHILE_EXP1
label WHILE_END1
push local 2
push static 0
add
push local 2
push static 0
add
pop pointer 1
push that 0
push local 3
push local 7
add
pop pointer 1
push that 0
not
and
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END1
goto IF_END0
label IF_FALSE0
push argument 0
push argument 2
push argument 1
push argument 2
call Screen.drawLine 4
pop temp 0
label IF_END0
push constant 0
return
function Screen.drawRectangle 2
push constant 0
pop local 0
push argument 3
push argument 1
sub
pop local 1
label WHILE_EXP0
push local 0
push local 1
gt
not
not
if-goto WHILE_END0
push argument 0
push argument 2
push argument 1
push local 0
add
call Screen.drawHorizontalLine 3
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawCircle 2
push argument 2
push constant 181
gt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 2
neg
pop local 0
label WHILE_EXP0
push local 0
push argument 2
gt
not
not
if-goto WHILE_END0
push argument 2
push argument 2
call Math.multiply 2
push local 0
push local 0
call Math.multiply 2
sub
call Math.sqrt 1
pop local 1
push argument 0
push local 1
sub
push argument 1
push local 0
add
push argument 0
push local 1
add
push argument 1
push local 0
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE0
push constant 0
return
